/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * OpenAPI spec version: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package trading.marketdata.BetfairStreamAPI.swagger.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ConnectionMessage;
import io.swagger.client.model.MarketChangeMessage;
import io.swagger.client.model.OrderChangeMessage;
import io.swagger.client.model.StatusMessage;


/**
 * AllResponseTypesExample
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-15T22:47:57.805+11:00")
public class AllResponseTypesExample   {
  /**
   * Gets or Sets opTypes
   */
  public enum OpTypesEnum {
    @SerializedName("connection")
    CONNECTION("connection"),
    
    @SerializedName("status")
    STATUS("status"),
    
    @SerializedName("mcm")
    MCM("mcm"),
    
    @SerializedName("ocm")
    OCM("ocm");

    private String value;

    OpTypesEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("opTypes")
  private OpTypesEnum opTypes = null;

  @SerializedName("marketChangeMessage")
  private MarketChangeMessage marketChangeMessage = null;

  @SerializedName("connection")
  private ConnectionMessage connection = null;

  @SerializedName("orderChangeMessage")
  private OrderChangeMessage orderChangeMessage = null;

  @SerializedName("status")
  private StatusMessage status = null;

  public AllResponseTypesExample opTypes(OpTypesEnum opTypes) {
    this.opTypes = opTypes;
    return this;
  }

   /**
   * Get opTypes
   * @return opTypes
  **/
  @ApiModelProperty(example = "null", value = "")
  public OpTypesEnum getOpTypes() {
    return opTypes;
  }

  public void setOpTypes(OpTypesEnum opTypes) {
    this.opTypes = opTypes;
  }

  public AllResponseTypesExample marketChangeMessage(MarketChangeMessage marketChangeMessage) {
    this.marketChangeMessage = marketChangeMessage;
    return this;
  }

   /**
   * Get marketChangeMessage
   * @return marketChangeMessage
  **/
  @ApiModelProperty(example = "null", value = "")
  public MarketChangeMessage getMarketChangeMessage() {
    return marketChangeMessage;
  }

  public void setMarketChangeMessage(MarketChangeMessage marketChangeMessage) {
    this.marketChangeMessage = marketChangeMessage;
  }

  public AllResponseTypesExample connection(ConnectionMessage connection) {
    this.connection = connection;
    return this;
  }

   /**
   * Get connection
   * @return connection
  **/
  @ApiModelProperty(example = "null", value = "")
  public ConnectionMessage getConnection() {
    return connection;
  }

  public void setConnection(ConnectionMessage connection) {
    this.connection = connection;
  }

  public AllResponseTypesExample orderChangeMessage(OrderChangeMessage orderChangeMessage) {
    this.orderChangeMessage = orderChangeMessage;
    return this;
  }

   /**
   * Get orderChangeMessage
   * @return orderChangeMessage
  **/
  @ApiModelProperty(example = "null", value = "")
  public OrderChangeMessage getOrderChangeMessage() {
    return orderChangeMessage;
  }

  public void setOrderChangeMessage(OrderChangeMessage orderChangeMessage) {
    this.orderChangeMessage = orderChangeMessage;
  }

  public AllResponseTypesExample status(StatusMessage status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "null", value = "")
  public StatusMessage getStatus() {
    return status;
  }

  public void setStatus(StatusMessage status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllResponseTypesExample allResponseTypesExample = (AllResponseTypesExample) o;
    return Objects.equals(this.opTypes, allResponseTypesExample.opTypes) &&
        Objects.equals(this.marketChangeMessage, allResponseTypesExample.marketChangeMessage) &&
        Objects.equals(this.connection, allResponseTypesExample.connection) &&
        Objects.equals(this.orderChangeMessage, allResponseTypesExample.orderChangeMessage) &&
        Objects.equals(this.status, allResponseTypesExample.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(opTypes, marketChangeMessage, connection, orderChangeMessage, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllResponseTypesExample {\n");
    
    sb.append("    opTypes: ").append(toIndentedString(opTypes)).append("\n");
    sb.append("    marketChangeMessage: ").append(toIndentedString(marketChangeMessage)).append("\n");
    sb.append("    connection: ").append(toIndentedString(connection)).append("\n");
    sb.append("    orderChangeMessage: ").append(toIndentedString(orderChangeMessage)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

