/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * OpenAPI spec version: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package trading.marketdata.BetfairStreamAPI.swagger.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Order;
import io.swagger.client.model.StrategyMatchChange;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * OrderRunnerChange
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-11-15T22:47:57.805+11:00")
public class OrderRunnerChange   {
  @SerializedName("mb")
  private List<List<Double>> mb = new ArrayList<List<Double>>();

  @SerializedName("smc")
  private Map<String, StrategyMatchChange> smc = new HashMap<String, StrategyMatchChange>();

  @SerializedName("uo")
  private List<Order> uo = new ArrayList<Order>();

  @SerializedName("id")
  private Long id = null;

  @SerializedName("hc")
  private Double hc = null;

  @SerializedName("fullImage")
  private Boolean fullImage = null;

  @SerializedName("ml")
  private List<List<Double>> ml = new ArrayList<List<Double>>();

  public OrderRunnerChange mb(List<List<Double>> mb) {
    this.mb = mb;
    return this;
  }

  public OrderRunnerChange addMbItem(List<Double> mbItem) {
    this.mb.add(mbItem);
    return this;
  }

   /**
   * Matched Backs - matched amounts by distinct matched price on the Back side for this runner (selection)
   * @return mb
  **/
  @ApiModelProperty(example = "null", value = "Matched Backs - matched amounts by distinct matched price on the Back side for this runner (selection)")
  public List<List<Double>> getMb() {
    return mb;
  }

  public void setMb(List<List<Double>> mb) {
    this.mb = mb;
  }

  public OrderRunnerChange smc(Map<String, StrategyMatchChange> smc) {
    this.smc = smc;
    return this;
  }

  public OrderRunnerChange putSmcItem(String key, StrategyMatchChange smcItem) {
    this.smc.put(key, smcItem);
    return this;
  }

   /**
   * Strategy Matches - Matched Backs and Matched Lays grouped by strategy reference
   * @return smc
  **/
  @ApiModelProperty(example = "null", value = "Strategy Matches - Matched Backs and Matched Lays grouped by strategy reference")
  public Map<String, StrategyMatchChange> getSmc() {
    return smc;
  }

  public void setSmc(Map<String, StrategyMatchChange> smc) {
    this.smc = smc;
  }

  public OrderRunnerChange uo(List<Order> uo) {
    this.uo = uo;
    return this;
  }

  public OrderRunnerChange addUoItem(Order uoItem) {
    this.uo.add(uoItem);
    return this;
  }

   /**
   * Unmatched Orders - orders on this runner (selection) that are not fully matched
   * @return uo
  **/
  @ApiModelProperty(example = "null", value = "Unmatched Orders - orders on this runner (selection) that are not fully matched")
  public List<Order> getUo() {
    return uo;
  }

  public void setUo(List<Order> uo) {
    this.uo = uo;
  }

  public OrderRunnerChange id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Selection Id - the id of the runner (selection)
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "Selection Id - the id of the runner (selection)")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public OrderRunnerChange hc(Double hc) {
    this.hc = hc;
    return this;
  }

   /**
   * Handicap - the handicap of the runner (selection) (null if not applicable)
   * @return hc
  **/
  @ApiModelProperty(example = "null", value = "Handicap - the handicap of the runner (selection) (null if not applicable)")
  public Double getHc() {
    return hc;
  }

  public void setHc(Double hc) {
    this.hc = hc;
  }

  public OrderRunnerChange fullImage(Boolean fullImage) {
    this.fullImage = fullImage;
    return this;
  }

   /**
   * Get fullImage
   * @return fullImage
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getFullImage() {
    return fullImage;
  }

  public void setFullImage(Boolean fullImage) {
    this.fullImage = fullImage;
  }

  public OrderRunnerChange ml(List<List<Double>> ml) {
    this.ml = ml;
    return this;
  }

  public OrderRunnerChange addMlItem(List<Double> mlItem) {
    this.ml.add(mlItem);
    return this;
  }

   /**
   * Matched Lays - matched amounts by distinct matched price on the Lay side for this runner (selection)
   * @return ml
  **/
  @ApiModelProperty(example = "null", value = "Matched Lays - matched amounts by distinct matched price on the Lay side for this runner (selection)")
  public List<List<Double>> getMl() {
    return ml;
  }

  public void setMl(List<List<Double>> ml) {
    this.ml = ml;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderRunnerChange orderRunnerChange = (OrderRunnerChange) o;
    return Objects.equals(this.mb, orderRunnerChange.mb) &&
        Objects.equals(this.smc, orderRunnerChange.smc) &&
        Objects.equals(this.uo, orderRunnerChange.uo) &&
        Objects.equals(this.id, orderRunnerChange.id) &&
        Objects.equals(this.hc, orderRunnerChange.hc) &&
        Objects.equals(this.fullImage, orderRunnerChange.fullImage) &&
        Objects.equals(this.ml, orderRunnerChange.ml);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mb, smc, uo, id, hc, fullImage, ml);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderRunnerChange {\n");
    
    sb.append("    mb: ").append(toIndentedString(mb)).append("\n");
    sb.append("    smc: ").append(toIndentedString(smc)).append("\n");
    sb.append("    uo: ").append(toIndentedString(uo)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    hc: ").append(toIndentedString(hc)).append("\n");
    sb.append("    fullImage: ").append(toIndentedString(fullImage)).append("\n");
    sb.append("    ml: ").append(toIndentedString(ml)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

